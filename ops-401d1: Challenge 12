#! /usr/bin/env python3
##  /\__/\
#  (=^ .^=)
#   (")(")__/  
##
# Script:                 Ops 401 12
# Author:                 Kimberly Dills
# Date of last revision:  10/20/2020
# Description of purpose: Network Security Tool with Scapy 2 of 3

import random
import ipaddress
from scapy.all import ICMP, IP, sr1, TCP

# ICMP Ping Sweep
# Define end host and TCP port range

host = "10.0.0.9"
port_range = [22, 23, 80, 443, 3389]

# Send SYN with random Src Port for each Dst port

for dst_port in port_range:
    src_port = random.randint(1025,65534)
    resp = sr1(
        IP(dst=host)/TCP(sport=src_port,dport=dst_port,flags="S"),timeout=1,
        verbose=0,
    )
    if resp is None:
       print(f"{host}:{dst_port} is filtered(silently dropped).")
    elif(resp.haslayer(TCP)):
        if(resp.getlayer(TCP).flags == 0x12):
            # Send a gratuitous RST to close the connection
            send_rst = sr(
                IP(dst=host)/TCP(sport=src_port,dport=dst_port,flags='R'),
                timeout=1,
                verbose=0,
            )                      
            print(f”{host}:{dst_port} is open.“)
        elif (resp.getlayer(TCP).flags == 0x14):
            print(f”{host}:{dst_port} is closed.“)
    elif(resp.haslayer(ICMP)):
        if(
            int(resp.getlayer(ICMP).type) == 3 and
            int(resp.getlayer(ICMP).code) in [1,2,3,9,10,13]
        ):
            print(f”{host}:{dst_port} is filtered (silently dropped).“)
# Define end host and TCP port range. Take care not to populate the host bits here.

# TCP Port range scanner

network = “10.0.2.0/24”
ip_list = ipaddress.ip_network(network)
hosts_count = 0
for host in ip_list:
    print(“Pinging “,host,“, please wait...“)
    response = sr1(
        IP(dst=str(host))/ICMP(),
        timeout=2,
        verbose=0
    )
print(response)

# End
