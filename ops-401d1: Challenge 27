#!/usr/bin/env python3
##  /\__/\
#  (=^ .^=)
#   (")(")__/  
##
# Script Name: Ops Challenge 27
# Author:      Kimberly Dills
# Date of last revision: 11/10/2020
# Description of purpose: Running Linux terminal commands in Python
# Event Logging Tool Part 2 of 3 

import logging, time, os
from logging.handlers import RotatingFileHandler


def verification(user_input):
    isFile = os.path.isfile(user_input)
    if isFile is False:
        print("Directory not found.")
    
    else:
        file_crawler(user_input)

# Declaration of variables:

operwhoami= os.popen("whoami").read()
operipa= os.popen("ip a").read()
operlshw= os.popen("sudo lshw -short").read()

# Declaration of functions

# Main

print (operwhoami)
print (operipa)
print (operlshw)


#try:
#    verification()

#except Exception as msg:
#    print(msg)
#    logging.exception(msg)

print('Logging started')

logging.basicConfig(filename='/home/osboxes/test_log.txt', level=logging.ERROR,)
log_file= "test.log.txt"
time_log="timed_tet.log"
print('Logging completed')
logging.debug('Information to debug')
logging.info('All the information..')
logging.warning('Warning!')
logging.error('Error information')
logging.critical('Critical information')
print('Logging end')

# OpsChall27 Logging tool Part 2
# Add a log rotation feature based on size
#def create_rotating_log(user_input):
#    """
#    Creates a rotating log
#    """
logger = logging.getLogger('Rotating Log')
handler = RotatingFileHandler('my_log.log', maxBytes=50, backupCount=5) #set each Value
logger.addHandler(handler)

for i in range(1000): #set each VALUE
    logmsg = "Hello world!"
    logmsg += str(i)
    logger.warning(logmsg)
    print ("Logging Hello world! number", i)
    os.system("ls -al")
    time.sleep(1.5)



#if __name__ == "__main__":
#    log_file = "test.log"
#   create_rotating_log(log_file) 




# End
