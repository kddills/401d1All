#!/usr/bin/env python3
#   /\__/\
#  (=^ .^=)
#   (")(")__/  

# Script:                 Ops 401 06
# Author:                 Kimberly Dills
# Date of last revision:  10/12/2020
# Description of purpose: File Encryption Script Part 1 of 3  

# Import Libraries
from cryptography.fernet import Fernet
import time

# Declalring Variable

file = "kitty.txt"
output = ""
# Declaring fuctions
## fucntion to load interface

def interface():
    global output
    print("""
    What options do you want to choose?
    
    1) Encrypt File
    2) Decrypt File
    3) Encrypt a message
    4) Decrypt a message
    5) Exit
    """)
    userInput = input("options ?")

    if(userInput == "1"):
        EncryptFile()
        ##Encrypt file here
        print("")
    elif(userInput == "2"): 
        decryptFile()
        ##Decrypt file here
        print("")
    elif(userInput == "3"):
        output = encryptMessage()
        ##Encrypt a message here 
        print("")
    elif(userInput == "4"):
        decryptMessage(output)
        #Decrypt a message
        print("")
    elif(userInput == "5"):
        print("Thank you for using this application")  
        exit(0)  
    else:
        print("put right input here you")    
        interface()

def EncryptFile():
    f =Fernet(key)
    with open(file, "rb") as fileread:
        readfile = fileread.read()
    EncryptFile = f.encrypt(readfile)
    with open(file, "wb") as filewrite:
        filewrite.write(EncryptFile)
    print("file has been encrypted")    

# Generating the key to be used for hashing
def generageKey():
    key = Fernet.generate_key()
    with open("demo.key", "wb") as key_file:
        key_file.write(key)

# Getting the key from the key file
def loadKey():
    return open("demo.key", "rb").read()        



def decryptFile():
    f = Fernet(key)
    with open(file, "rb") as fileread:
        # read the encrypted data
        encrypted_data = fileread.read()
    # decrypt data
    decrypted_data = f.decrypt(encrypted_data)
    # write the original file
    with open(file, "wb") as filewrite:
        filewrite.write(decrypted_data) 

# Encrypt a message (mode 3)
def encryptMessage():
    f = Fernet(key)
    userMessage = input ("Please enter your message to encrypt.").encode()
    encryptedMessage = f.encrypt(userMessage)
    print (encryptedMessage) 
    return encryptedMessage   

def decryptMessage(msg):
    f = Fernet(key)
    decryptMsg = f.decrypt(msg)
    print (decryptMsg)                

# Main
generageKey()
key = loadKey()
while (True): 
    interface()  

# End 
          
